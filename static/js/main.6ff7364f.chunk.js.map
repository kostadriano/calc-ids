{"version":3,"sources":["serviceWorker.js","components/Table/index.js","models/sample.js","pages/Samples/components/SamplesTable/index.js","pages/Samples/index.js","pages/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Table","options","props","search","actionsColumnIndex","paging","defaultProps","validations","value","min","Number","samplesTableColumns","title","field","validate","speciesName","lookup","M","F","sex","initialEditValue","size","editComponent","onChange","error","Input","required","placeholder","target","type","SamplesTable","samples","onSampleAdd","onSampleDelete","onSampleUpdate","data","columns","editable","onRowAdd","newSample","Promise","resolve","onRowUpdate","updatedSample","onRowDelete","deletedSample","addRowPosition","maxBodyHeight","rowStyle","fontSize","mockedSamples","Samples","React","useState","setSamples","sample","id","Date","getTime","generateNewSample","updatedSamples","filter","map","IndexPage","Container","component","p","Box","mt","py","textAlign","Typography","variant","paragraph","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6ff7364f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport MaterialTable from 'material-table';\n\nconst Table = ({ options, ...props }) =>\n  <MaterialTable\n    options={{\n      search: false,\n      actionsColumnIndex: -1,\n      paging: false,\n      ...options\n    }}\n    {...props}\n  />\n\nTable.defaultProps = {\n  options: {}\n}\n\nexport default Table;\n","import React from 'react';\nimport { Input } from '@material-ui/core';\n\nconst validations = {\n  required: value => value != null && value !== '',\n  min: (value, min) => Number(min) <= Number(value)\n}\n\nexport const samplesTableColumns = [\n  {\n    title: \"Nome da espécie\",\n    field: 'speciesName',\n    validate: ({ speciesName }) => validations.required(speciesName)\n  },\n  {\n    title: \"Sexo\",\n    field: 'sex',\n    lookup: { M: 'M', F: 'F' },\n    validate: ({ sex }) => validations.required(sex)\n  },\n  {\n    title: \"Tamanho\",\n    field: 'size',\n    initialEditValue: 0,\n    validate: ({ size }) => validations.required(size) && validations.min(size, 0),\n    editComponent: ({ value, onChange, error }) =>\n      <Input\n        required\n        placeholder=\"Tamanho\"\n        min=\"0\"\n        value={value}\n        onChange={({ target }) => onChange(target.value)}\n        error={error}\n        type=\"number\"\n      />\n  },\n]\n\nexport const generateNewSample = sample => ({\n  ...sample,\n  id: new Date().getTime()\n})\n","import React from 'react';\n\nimport Table from '../../../../components/Table';\nimport { samplesTableColumns } from '../../../../models/sample';\n\nconst SamplesTable = ({ samples, onSampleAdd, onSampleDelete, onSampleUpdate }) =>\n  <Table\n    title=\"Amostras\"\n    data={samples}\n    columns={samplesTableColumns}\n    editable={{\n      onRowAdd: newSample =>\n        new Promise((resolve) => {\n          onSampleAdd(newSample);\n\n          resolve();\n        }),\n      onRowUpdate: updatedSample =>\n        new Promise((resolve) => {\n          onSampleUpdate(updatedSample);\n\n          resolve();\n        }),\n      onRowDelete: deletedSample =>\n        new Promise(resolve => {\n          onSampleDelete(deletedSample)\n\n          resolve();\n        })\n    }}\n    options={{\n      addRowPosition: 'first',\n      maxBodyHeight: '250px',\n      rowStyle: {\n        fontSize: '14px'\n      }\n    }}\n  />\n\nexport default SamplesTable;\n","import React from 'react';\nimport SamplesTable from './components/SamplesTable';\nimport { generateNewSample } from '../../models/sample';\n\nconst Samples = () => {\n  const [samples, setSamples] = React.useState(mockedSamples);\n\n  const handleSampleAdd = (sample) => {\n    const newSample = generateNewSample(sample)\n\n    setSamples([...samples, newSample])\n  }\n\n  const handleSampleUpdate = (updatedSample) => {\n    const updatedSamples = samples.map(sample =>\n      sample.id === updatedSample.id\n        ? {\n          ...sample,\n          ...updatedSample\n        }\n        : sample\n    )\n\n    setSamples(updatedSamples)\n  }\n\n  const handleDeleteSample = (deletedSample) => {\n    const updatedSamples = samples.filter(sample =>\n      sample.id !== deletedSample.id\n    )\n\n    setSamples(updatedSamples)\n  }\n\n  return (\n    <SamplesTable\n      samples={samples}\n      onSampleAdd={handleSampleAdd}\n      onSampleDelete={handleDeleteSample}\n      onSampleUpdate={handleSampleUpdate}\n    />\n  )\n}\n\nconst mockedSamples = [\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n  {size: \"123\", sex: \"M\", speciesName: \"ASdasdasd\"},\n]\n\nexport default Samples;\n","import React from 'react';\nimport { Typography, Box, Container } from '@material-ui/core';\nimport Samples from '../pages/Samples';\nimport 'fontsource-roboto';\n\nconst IndexPage = () =>\n  <Container component=\"main\" p={5}>\n    <Box mt={8} py={3} textAlign=\"center\">\n      <Typography variant=\"h2\" paragraph>\n        S-Dimorph\n      </Typography>\n\n      <Samples />\n    </Box>\n  </Container>\n\nexport default IndexPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport IndexPage from './pages/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <IndexPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}