{"version":3,"sources":["serviceWorker.js","components/AlertModal/index.js","components/Table/index.js","models/sample.js","pages/Samples/components/SamplesTable/index.js","models/calculationResult.js","pages/Samples/components/CalculationResultTable/index.js","pages/Samples/components/Calculate/index.js","components/Dropzone/index.js","components/LoadingWrapper/Loading.js","components/LoadingWrapper/index.js","services/parseSheet.js","utils/isEmpty.js","models/batchUpload.js","pages/Samples/components/BatchesUploadModal/constants.js","pages/Samples/components/BatchesUploadModal/index.js","utils/setLoading.js","utils/getRandomSampleData.js","models/sdiCalc.js","services/calculateData.js","pages/Samples/constants.js","pages/Samples/index.js","theme/index.js","pages/index.js","index.js"],"names":["Boolean","window","location","hostname","match","BatchesUploadModal","initialState","open","title","text","error","content","React","useState","confirmationModal","setConfirmationModal","openAlertModal","Dialog","disableBackdropClick","fullWidth","DialogTitle","DialogContent","DialogContentText","Alert","severity","DialogActions","Button","color","variant","onClick","Table","options","props","search","actionsColumnIndex","paging","localization","header","actions","body","emptyDataSourceMessage","addTooltip","editRow","deleteText","cancelTooltip","saveTooltip","pagination","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","labelDisplayedRows","defaultProps","sexValues","M","F","validations","value","min","Number","sampleIsValid","speciesName","sex","size","samplesTableColumns","field","validate","lookup","align","editComponent","onChange","Input","required","style","fontSize","placeholder","target","type","cellStyle","textAlign","generateNewSample","sample","id","getUUID","SamplesTable","samples","onSampleAdd","onSampleDelete","onSampleUpdate","data","columns","editable","onRowAdd","newSample","Promise","resolve","reject","onRowUpdate","updatedSample","onRowDelete","deletedSample","addRowPosition","pageSize","emptyRowsWhenPaging","showEmptyDataSourceMessage","pageSizeOptions","rowStyle","calculationResultTableHeaders","CalculationResultTable","result","map","row","length","malesAverage","toFixed","femalesAverage","SDI","exportButton","Calculate","calculationResult","Box","marginTop","CustomDropZone","acceptedMimeTypes","classes","disabled","fileName","setFileName","onDrop","files","rejectedFiles","newFile","name","accept","multiple","getRootProps","getInputProps","isDragActive","isDragReject","className","Dropzone_disabled","Dropzone_onDragReject","Dropzone_onDrag","dropzoneClassName","Dropzone","Dropzone_selectedFile","Typography","label","currentFileName","withStyles","theme","margin","display","flexDirection","alignItems","backgroundColor","padding","minWidth","borderRadius","fontWeight","fontFamily","border","cursor","outline","opacity","spacing","textTransform","Loading","justifyContent","position","width","height","top","left","zIndex","CircularProgress","LoadingWrapper","loading","children","file","fileReader","FileReader","onload","readedSheets","XLSX","read","sheetName","SheetNames","sheet","Sheets","dataParsed","utils","sheet_to_row_object_array","defval","onerror","readAsBinaryString","Array","isArray","Object","keys","throwError","message","Error","COLUMNS","isEmpty","sexValuesKeys","upperValue","toUpperCase","includes","toString","number","isNaN","FORMATS","format","mimeType","acceptedFormats","validateData","line","index","reduce","element","lineKey","elementColumn","currentValue","parseFile","a","Parser","parsedData","deserializedData","dataKeys","object","key","INSTRUCTIONS","onClose","onSubmit","setError","setData","setLoading","handleFileDrop","handleSubmit","e","preventDefault","stopPropagation","maxWidth","instruction","join","marginY","marginRight","document","querySelector","classList","add","remove","getRandomSamples","apply","Math","floor","random","normalizeSpeciesData","speciesObject","newSpeciesList","currentSpecies","getMalesAndFemales","males","females","checkMalesAndFemalesData","getSexAverage","getLovichGibbonsIndex","species","getAverage","Utils","filterBy","array","b","groupBy","attribute","groups","item","currentElements","filter","calculate","groupedSpecies","calculateData","Samples","setSamples","setCalculationResult","modalIsOpen","setModalOpen","calculationRef","useRef","useEffect","scrollTo","current","offsetTop","marginBottom","IconButton","flexWrap","paddingY","paragraph","marginLeft","getRandomSampleData","updatedSamples","ref","newSamples","createMuiTheme","palette","primary","secondary","dark","light","main","IndexPage","ThemeProvider","Container","component","p","AlertModal","mt","py","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c6cb7f5d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab'\n\nconst BatchesUploadModal = () => {\n  const initialState = {\n    open: false,\n    title: '',\n    text: '',\n    error: '',\n    content: null\n  }\n\n  const [confirmationModal, setConfirmationModal] = React.useState(initialState)\n\n  const openAlertModal = ({ text, title, error, content } = {}) => {\n    setConfirmationModal({\n      text,\n      title,\n      error,\n      content,\n      open: true\n    })\n  }\n\n  const closeAlertModal = () => {\n    setConfirmationModal(initialState)\n  }\n\n  window.openAlertModal = openAlertModal\n\n  return (\n    <Dialog\n      open={confirmationModal.open}\n      disableBackdropClick\n      fullWidth\n    >\n      {confirmationModal.title &&\n        <DialogTitle>\n          {confirmationModal.title}\n        </DialogTitle>\n      }\n\n      <DialogContent>\n        {confirmationModal.text &&\n          <DialogContentText>\n            {confirmationModal.text}\n          </DialogContentText>\n        }\n\n        {confirmationModal.error &&\n          <Alert severity='error'>\n            Erro! {confirmationModal.error}\n          </Alert>\n        }\n\n        {\n          confirmationModal.content &&\n          confirmationModal.content()\n        }\n\n        <DialogActions >\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={closeAlertModal}\n          >\n            Confirmar\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default BatchesUploadModal;\n","import React from 'react';\nimport MaterialTable from 'material-table';\n\nconst Table = ({ options, ...props }) =>\n  <MaterialTable\n    options={{\n      search: false,\n      actionsColumnIndex: -1,\n      paging: false,\n      ...options\n    }}\n    localization={{\n      header: {\n        actions: 'Ações',\n      },\n      body: {\n        emptyDataSourceMessage: 'Sem dados',\n        addTooltip: 'Adicionar Amostra',\n        editRow: {\n          deleteText: 'Voce tem certeza que deseja deletar esta amostra?',\n          cancelTooltip: 'Cancelar',\n          saveTooltip: 'Salvar',\n        },\n      },\n      pagination: {\n        labelRowsSelect: 'linhas',\n        labelRowsPerPage: 'Linhas por página:',\n        firstAriaLabel: 'Primeira página',\n        firstTooltip: 'Primeira página',\n        previousAriaLabel: 'Página anterior',\n        previousTooltip: 'Página anterior',\n        nextAriaLabel: 'Próxima página',\n        nextTooltip: 'Próxima página',\n        lastAriaLabel: 'Última página',\n        lastTooltip: 'Última página',\n        labelDisplayedRows: '{from}-{to} de {count}',\n      },\n    }}\n    {...props}\n  />\n\nTable.defaultProps = {\n  options: {}\n}\n\nexport default Table;\n","import React from 'react';\nimport { Input } from '@material-ui/core';\nimport { v4 as getUUID } from 'uuid';\n\nexport const sexValues = { M: 'M', F: 'F' };\n\nconst validations = {\n  required: value => value != null && value !== '',\n  min: (value, min) => Number(min) <= Number(value)\n}\n\nexport const sampleIsValid = ({ speciesName, sex, size }) => (\n  validations.required(speciesName) &&\n  validations.required(sex) &&\n  validations.required(size) &&\n  validations.min(size, 0.001)\n)\n\nexport const samplesTableColumns = [\n  {\n    title: \"Nome da espécie\",\n    field: 'speciesName',\n    validate: ({ speciesName }) => validations.required(speciesName)\n  },\n  {\n    title: \"Sexo\",\n    field: 'sex',\n    lookup: sexValues,\n    validate: ({ sex }) => validations.required(sex)\n  },\n  {\n    title: \"Tamanho\",\n    field: 'size',\n    validate: ({ size }) => validations.required(size) && validations.min(size, 0.001),\n    align: 'left',\n    editComponent: ({ value, onChange, error }) =>\n      <Input\n        required\n        style={{ fontSize: \"13px\" }}\n        placeholder=\"Tamanho\"\n        min=\"0\"\n        value={value || ''}\n        onChange={({ target }) => onChange(target.value)}\n        error={error}\n        type=\"number\"\n      />,\n    cellStyle: { textAlign: 'left' }\n  },\n]\n\nexport const generateNewSample = ({ size, ...sample }) => ({\n  ...sample,\n  size: Number(size),\n  id: getUUID()\n})\n","import React from 'react';\n\nimport Table from '../../../../components/Table';\nimport { samplesTableColumns, sampleIsValid } from '../../../../models/sample';\n\nconst SamplesTable = ({ samples, onSampleAdd, onSampleDelete, onSampleUpdate, title }) =>\n  <Table\n    title={title}\n    data={samples}\n    columns={samplesTableColumns}\n    editable={{\n      onRowAdd: newSample =>\n        new Promise((resolve, reject) => {\n          if (sampleIsValid(newSample)) {\n            onSampleAdd(newSample);\n\n            resolve();\n          }\n          else {\n            reject();\n          }\n        }),\n      onRowUpdate: updatedSample =>\n        new Promise((resolve, reject) => {\n          if (sampleIsValid(updatedSample)) {\n            onSampleUpdate(updatedSample);\n\n            resolve();\n          }\n          else {\n            reject();\n          }\n        }),\n      onRowDelete: deletedSample =>\n        new Promise(resolve => {\n          onSampleDelete(deletedSample)\n\n          resolve();\n        })\n    }}\n    options={{\n      addRowPosition: 'first',\n      paging: true,\n      pageSize: 10,\n      emptyRowsWhenPaging: false,\n      showEmptyDataSourceMessage: false,\n      pageSizeOptions: [5, 10, 25, 50],\n      rowStyle: {\n        fontSize: '14px'\n      }\n    }}\n  />\n\nexport default SamplesTable;\n","export const calculationResultTableHeaders = [\n  {\n    title: \"Espécie\",\n    field: 'species',\n  },\n  {\n    title: \"Numero de amostras\",\n    field: 'samples',\n  },\n  {\n    title: \"Média tamanho fêmeas\",\n    field: 'femalesAverage',\n  },\n  {\n    title: \"Média tamanho machos\",\n    field: 'malesAverage',\n  },\n  {\n    title: \"IDS\",\n    field: 'SDI',\n  }\n]\n\nexport const deserializeTableValues = data =>\n  data.map(row => ({\n    ...row,\n    samples: row.samples.length,\n    malesAverage: row.malesAverage.toFixed(2),\n    femalesAverage: row.femalesAverage.toFixed(2),\n    SDI: row.SDI.toFixed(2),\n  }))\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { calculationResultTableHeaders, deserializeTableValues } from '../../../../models/calculationResult';\n\nconst CalculationResultTable = ({ result }) =>\n  <Table\n    title=\"Resultado do cálculo do Índice de Dimorfismo Sexual\"\n    columns={calculationResultTableHeaders}\n    data={deserializeTableValues(result)}\n    options={{\n      exportButton: true,\n      paging: true,\n      pageSize: 10,\n      emptyRowsWhenPaging: false,\n      showEmptyDataSourceMessage: false,\n      pageSizeOptions: [5, 10, 25, 50],\n    }}\n  />\n\nexport default CalculationResultTable;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport CalculationResultTable from '../CalculationResultTable';\n\nconst Calculate = ({ calculationResult }) =>\n  calculationResult\n    ? (\n      <Box marginTop={2}>\n        <CalculationResultTable\n          result={calculationResult}\n        />\n      </Box>\n    )\n    : null\n\nexport default Calculate;\n","import React from 'react'\n\nimport { Typography } from '@material-ui/core'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport UploadIcon from '@material-ui/icons/CloudDownload'\nimport Dropzone from 'react-dropzone'\n\nconst CustomDropZone = ({ acceptedMimeTypes, onChange, classes, disabled }) => {\n  const [fileName, setFileName] = React.useState(null)\n\n  const onFileDrop = (files, rejectedFiles) => {\n    if (rejectedFiles.length > 0) return\n\n    const [newFile] = files;\n\n    onChange(newFile);\n    setFileName(newFile.name);\n  }\n\n  const dropzoneClassName = ({ isDragActive, isDragReject, disabled }) => {\n    if (disabled) {\n      return classes.Dropzone_disabled\n    }\n    if (isDragReject) {\n      return classes.Dropzone_onDragReject\n    }\n    if (isDragActive) {\n      return classes.Dropzone_onDrag\n    }\n\n    return null\n  }\n\n  return (\n    <Dropzone\n      onDrop={onFileDrop}\n      accept={acceptedMimeTypes}\n      multiple={false}\n    >\n      {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\n        const className = dropzoneClassName({ isDragActive, isDragReject, disabled });\n\n        return (\n          <div\n            variant='contained'\n            color='primary'\n            {...getRootProps()}\n            className={`${classes.Dropzone} ${className}`}\n          >\n            <input {...getInputProps()} />\n            <UploadIcon />\n            <div>\n              {\n                !isDragReject\n                  ? 'Arraste o arquivo aqui, ou clique para adicionar'\n                  : 'Formato não suportado'\n              }\n            </div>\n            {\n              fileName &&\n              <div className={classes.Dropzone_selectedFile}>\n                <Typography>\n                  Selecionado:\n                </Typography>\n                <Typography variant='body1'>\n                  {` ${fileName}`}\n                </Typography>\n              </div>\n            }\n          </div>\n        )\n      }}\n    </Dropzone>\n  )\n}\n\nconst styles = theme => ({\n  Dropzone: {\n    margin: '5px 0',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    color: '#101010',\n    backgroundColor: '#F5F5F5',\n    padding: '10px 16px',\n    fontSize: '0.875rem',\n    minWidth: '64px',\n    borderRadius: '4px',\n    fontWeight: 500,\n    fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n    border: '2px solid transparent',\n    cursor: 'pointer',\n    outline: 'none',\n    '&:hover': {\n      backgroundColor: '#D9D9D9',\n    }\n  },\n  Dropzone_onDrag: {\n    backgroundColor: '#FAFAFA',\n    color: '#497530',\n    border: '2px dashed #497530',\n  },\n  Dropzone_onDragReject: {\n    backgroundColor: '#FAFAFA',\n    color: '#D32F2F',\n    border: '2px dashed #D32F2F',\n  },\n  Dropzone_disabled: {\n    opacity: 0.6,\n    '&:hover': {\n      backgroundColor: 'inherit',\n      cursor: 'not-allowed'\n    }\n  },\n  Dropzone_selectedFile: {\n    color: 'inherit',\n    display: 'flex',\n    marginTop: theme.spacing(),\n    textTransform: 'none'\n  },\n})\n\nCustomDropZone.defaultProps = {\n  onChange: () => { },\n  acceptedMimeTypes: [\n    'image/*'\n  ],\n  label: 'Arquivo',\n  currentFileName: '',\n  disabled: false\n}\nexport default withStyles(styles)(CustomDropZone)\n","import React from 'react';\nimport { CircularProgress, withStyles } from '@material-ui/core';\n\nconst Loading = ({ classes }) =>\n  <div className={classes.Loading}>\n    <CircularProgress />\n  </div>\n\nconst styles = () => ({\n  Loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(220, 220, 220, 0.6)',\n    zIndex: 10000,\n  }\n})\n\nexport default withStyles(styles)(Loading);\n","import React from 'react';\nimport Loading from './Loading';\nimport { withStyles } from '@material-ui/core';\n\nconst LoadingWrapper = ({ loading, children, classes }) =>\n  <div className={classes.LoadingWrapper}>\n    {loading && <Loading />}\n    {children}\n  </div>\n\nconst styles = () => ({\n  LoadingWrapper: {\n    position: 'relative'\n  }\n})\n\nexport default withStyles(styles)(LoadingWrapper);\n","import XLSX from 'xlsx';\n\nconst parse = (file) =>\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = ({ target: { result: data } }) => {\n      const readedSheets = XLSX.read(data, {\n        type: 'binary'\n      });\n\n      const [sheetName] = readedSheets.SheetNames;\n      const sheet = readedSheets.Sheets[sheetName];\n\n      const dataParsed = XLSX.utils.sheet_to_row_object_array(sheet, { defval: null })\n\n      resolve(dataParsed)\n    };\n\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n\n    fileReader.readAsBinaryString(file);\n  })\n\nexport default { parse }\n","export default (value) => {\n  if (value === '' || value == null) return true;\n\n  if (Array.isArray(value)) return !value.length;\n\n  if (typeof value === \"object\") return !Object.keys(value).length;\n\n  return false;\n}\n","import Parser from '../services/parseSheet';\nimport { sexValues } from './sample';\nimport isEmpty from '../utils/isEmpty';\n\nconst throwError = (message) => {\n  throw new Error(message);\n}\n\nconst COLUMNS = {\n  speciesName: {\n    validate: (value, row) => {\n      if (isEmpty(value)) {\n        throwError(`Linha ${row}: O nome da espécie não pode ser vazio`);\n      }\n\n      return value;\n    }\n  },\n  sex: {\n    validate: (value, row) => {\n      if (isEmpty(value)) {\n        throwError(`Linha ${row}: O sexo não pode ser vazio`);\n      }\n\n      const sexValuesKeys = Object.keys(sexValues);\n      const upperValue = value.toUpperCase();\n\n      if (!sexValuesKeys.includes(upperValue)) {\n        throwError(`Linha ${row}: O sexo deve ser um dos valores: ${sexValuesKeys.toString()}`);\n      }\n\n      return upperValue;\n    }\n  },\n  size: {\n    validate: (value, row) => {\n      if (isEmpty(value)) {\n        throwError(`Linha ${row}: O tamanho não pode ser vazio`);\n      }\n\n      const number = Number(value);\n\n      if (isNaN(number)) {\n        throwError(`Linha ${row}: Tamanho deve ser um número`);\n      }\n\n      return number;\n    }\n  }\n}\n\nexport const FORMATS = [\n  { format: 'csv', mimeType: 'text/csv' },// .csv\n  { format: 'ods', mimeType: 'application/vnd.oasis.opendocument.spreadsheet' }, // .ods\n  { format: 'xls', mimeType: 'application/vnd.ms-excel' }, //.xls Microsoft Excel\n  { format: 'xlsx', mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' }, //.xlsx Microsoft Excel (OpenXML)\n]\n\nexport const acceptedFormats = FORMATS.map(({ format }) => format);\n\nexport const acceptedMimeTypes = FORMATS.map(({ mimeType }) => mimeType);\n\nconst validateData = (data) => {\n  if (!data.length) throwError('A tabela não possui nenhum registro.');\n\n  return data.map((line, index) =>\n    Object.keys(line).reduce((element, lineKey) => {\n      const elementColumn = COLUMNS[lineKey];\n      const currentValue = line[lineKey];\n      const row = index + 2;\n\n      element[lineKey] = elementColumn.validate\n        ? elementColumn.validate(currentValue, row)\n        : currentValue;\n\n      return element\n    }, {})\n  )\n}\n\nconst deserializeData = (data) => data.map(element => {\n  const dataKeys = Object.keys(COLUMNS);\n\n  return Object.keys(element).reduce((object, key, index) => {\n    object[dataKeys[index]] = element[key];\n\n    return object\n  }, {})\n})\n\nexport const parseFile = async (file) => {\n  const parsedData = await Parser.parse(file);\n\n  const deserializedData = deserializeData(parsedData);\n\n  return validateData(deserializedData)\n}\n","export const INSTRUCTIONS = [\n  'Utilize o modelo como ponto de partida, ele contém um exemplo do formato dos dados.',\n  'O separador das céluas da tabela é \",\" (vírgula), por isso evite valores com esse símbolo, caso precisar utilize o valor entre aspas ex: \"especie, 2\".',\n  'A ordem das colunas deve ser: nome da espécie | sexo | tamanho.',\n  'O campo sexo deve ser um dos valores: \"M ou F\".',\n  'O campo tamanho deve ser um número com a casa decimal separarda por \".\" (ponto). Ex: \"1.45\".'\n];\n","import React from 'react';\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogContentText,\n  Typography,\n} from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab'\n\nimport Dropzone from '../../../../components/Dropzone';\nimport LoadingWrapper from '../../../../components/LoadingWrapper';\n\nimport { parseFile, acceptedMimeTypes, acceptedFormats } from '../../../../models/batchUpload';\n\nimport { INSTRUCTIONS } from './constants';\n\nconst BatchesUploadModal = ({ open, onClose, onSubmit }) => {\n  const [error, setError] = React.useState(null);\n  const [data, setData] = React.useState([]);\n  const [loading, setLoading] = React.useState(false)\n\n  const handleFileDrop = async (file) => {\n    setLoading(true);\n\n    try {\n      const parsedData = await parseFile(file);\n\n      setData(parsedData);\n      setError(null);\n    }\n    catch ({ message }) {\n      setError(message)\n    }\n\n    setLoading(false);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    onSubmit(data);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableBackdropClick\n      maxWidth='md'\n    >\n      <LoadingWrapper loading={loading}>\n        <DialogTitle>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            Adicionar Amostras\n          </Box>\n        </DialogTitle>\n\n        <DialogContent>\n          <Typography>Instruções:</Typography>\n\n          <ul>\n            {INSTRUCTIONS.map((instruction, index) =>\n              <li key={index}>\n                <Typography>{instruction}</Typography>\n              </li>\n            )}\n          </ul>\n\n          <Box textAlign=\"center\">\n            <Button\n              color='primary'\n              variant='outlined'\n              onClick={() => window.open('/s-dimorph/tabela-amostras-exemplo.csv')}\n            >\n              Baixar Modelo\n            </Button>\n          </Box>\n\n          <DialogContentText>\n            Formatos aceitos: {acceptedFormats.join(', ')}\n          </DialogContentText>\n          <Dropzone\n            onChange={handleFileDrop}\n            acceptedMimeTypes={acceptedMimeTypes}\n          />\n\n          {!!error &&\n            <Box marginTop=\"16px\">\n              <Alert severity='error'>\n                Erro! {error}\n              </Alert>\n            </Box>\n          }\n          <Box marginY=\"16px\" display=\"flex\" justifyContent=\"flex-end\">\n            <Box marginRight=\"16px\">\n              <Button\n                color='primary'\n                onClick={onClose}\n              >\n                Cancelar\n              </Button>\n            </Box>\n\n            <Button\n              color='primary'\n              variant='contained'\n              onClick={handleSubmit}\n              disabled={!!error || !data.length}\n            >\n              Confirmar\n            </Button>\n          </Box>\n        </DialogContent>\n      </LoadingWrapper>\n    </Dialog>\n  )\n}\n\nexport default BatchesUploadModal;\n","export default (value) => {\n  const element = document.querySelector('#loading-wrapper');\n\n  value\n    ? element.classList.add('loading-indicator')\n    : element.classList.remove('loading-indicator')\n}\n","import { generateNewSample } from '../models/sample';\n\nconst getSpecies = () => [\"A\", \"B\", \"C\"][Math.floor(Math.random() * 3)]\nconst getSize = () => Math.floor(Math.random() * 10);\nconst getSex = () => [\"F\", \"M\"][Math.floor(Math.random() * 2)];\n\nconst getRandomSamples = () => Array.apply(null, Array(35)).map(e =>\n  generateNewSample({\n    speciesName: getSpecies(),\n    sex: getSex(),\n    size: getSize(),\n  })\n);\n\nexport default getRandomSamples;\n","const calculate = samples => {\n  const groupedSpecies = Utils.groupBy(samples, 'speciesName');\n\n  const species = normalizeSpeciesData(groupedSpecies);\n\n  return species;\n}\n\nconst checkMalesAndFemalesData = ({ males, females, currentSpecies }) => {\n  if (males.length === 0) throw new Error(`A espécie ${currentSpecies} precisa conter pelo menos uma amostra do sexo masculino.`);\n  if (females.length === 0) throw new Error(`A espécie ${currentSpecies} precisa conter pelo menos uma amostra do sexo feminino.`);\n}\n\nconst normalizeSpeciesData = speciesObject =>\n  Object.keys(speciesObject).reduce((newSpeciesList, currentSpecies) => {\n    const samples = speciesObject[currentSpecies];\n\n    const { males, females } = getMalesAndFemales(samples);\n\n    checkMalesAndFemalesData({ males, females, currentSpecies });\n\n    const { malesAverage, femalesAverage } = getSexAverage({ males, females });\n\n    const SDI = getLovichGibbonsIndex({ malesAverage, femalesAverage })\n\n    return [\n      ...newSpeciesList,\n      {\n        species: currentSpecies,\n        samples,\n        males,\n        females,\n        malesAverage,\n        femalesAverage,\n        SDI\n      }\n    ];\n  }, [])\n\nconst getSexAverage = ({ males, females }) => ({\n  malesAverage: getAverage(males),\n  femalesAverage: getAverage(females)\n})\n\nconst getMalesAndFemales = species => ({\n  males: Utils.filterBy(species, 'sex', 'M'),\n  females: Utils.filterBy(species, 'sex', 'F')\n})\n\nconst getAverage = array => !!array.length\n  ? array.reduce((a, b) => (a + Number(b.size || 0)), 0) / array.length\n  : 0\n\nconst getLovichGibbonsIndex = ({ malesAverage, femalesAverage }) =>\n  !(!malesAverage || !femalesAverage)\n    ? malesAverage > femalesAverage\n      ? (((malesAverage / femalesAverage) - 1) * -1)\n      : ((femalesAverage / malesAverage) - 1)\n    : 0\n\nconst Utils = {\n  groupBy: (array, attribute) =>\n    array.reduce((groups, item) => {\n      const currentElements = groups[item[attribute]] || []\n\n      groups[item[attribute]] = [...currentElements, item]\n\n      return groups\n    }, {}),\n  filterBy: (array, attribute, value) =>\n    array.filter(element => element[attribute] === value)\n}\n\n\nexport default calculate;\n","import calculate from '../models/sdiCalc';\n\nconst calculateData = samples => calculate(samples);\n\nexport default calculateData;\n","export const INSTRUCTIONS = [\n  'Este sistema tem como objetivo auxiliar o cálculo do índice de Lovich-Gibbons, este analisa a razão do dimorfismo sexual o tamanho (diferença de tamanho entre machos e fêmeas).',\n  'Para começar primeiro você deve adicionar as amostras coletadas informando o nome da espécie, o sexo e o tamanho da amostra. Esta operação pode ser feita através do simbolo de + da tabela, ou através do upload de um arquivo, no botão \"ADICIONAR AMOSTRAS POR ARQUIVO\"',\n  'Se voce quiser fazer um teste pode utilizar o botão \"GERAR AMOSTRAS ALEATÓRIAS\".',\n  'Após adicionar as amostras clique em \"CALCULAR IDS\", essa operação vai gerar uma tabela com os resultados das espécies.',\n  'Esta tabela de resultado pode ser exportada em csv(para ser utilizada com excel, libreoffice) ou em pdf.'\n];\n","import React, { useEffect, useRef } from 'react';\n\nimport SamplesTable from './components/SamplesTable';\nimport Calculate from './components/Calculate';\nimport BatchesUploadModal from './components/BatchesUploadModal';\nimport setLoading from '../../utils/setLoading';\n\nimport { Button, Box, Typography, IconButton } from '@material-ui/core';\nimport { generateNewSample } from '../../models/sample';\nimport getRandomSampleData from '../../utils/getRandomSampleData';\nimport calculateData from '../../services/calculateData';\nimport { INSTRUCTIONS } from './constants';\n\nimport HelpIcon from '@material-ui/icons/HelpOutline'\n\nconst Samples = () => {\n  const [samples, setSamples] = React.useState([]);\n  const [calculationResult, setCalculationResult] = React.useState(null);\n  const [modalIsOpen, setModalOpen] = React.useState(false);\n  const calculationRef = useRef(null);\n\n  useEffect(() => {\n    setLoading(false)\n  }, [samples, calculationResult])\n\n  useEffect(() => {\n    window.scrollTo(0, calculationRef.current.offsetTop)\n\n  }, [calculationResult])\n\n  const handleCalculation = () => {\n    setLoading(true);\n\n    try {\n      const result = calculateData(samples);\n      setCalculationResult(result);\n    }\n    catch (error) {\n      window.openAlertModal({\n        title: 'Erro ao calcular',\n        error: error.message\n      })\n    }\n\n    setLoading(false);\n  }\n\n  const generateRandomSamples = () => {\n    setSamples(getRandomSampleData());\n  }\n\n  const handleSampleAdd = (sample) => {\n    const newSample = generateNewSample(sample)\n\n    setSamples([...samples, newSample])\n  }\n\n  const handleSampleUpdate = (updatedSample) => {\n    const updatedSamples = samples.map(sample =>\n      sample.id === updatedSample.id\n        ? {\n          ...sample,\n          ...updatedSample\n        }\n        : sample\n    )\n\n    setSamples(updatedSamples)\n  }\n\n  const handleDeleteSample = (deletedSample) => {\n    const updatedSamples = samples.filter(sample =>\n      sample.id !== deletedSample.id\n    )\n\n    setSamples(updatedSamples)\n  }\n\n  const handleBatchUploadSamples = (data) => {\n    setLoading(true);\n    setModalOpen(false);\n\n    const newSamples = data.map(generateNewSample);\n\n    setSamples(newSamples);\n  }\n\n  return (\n    <>\n      <Box display='flex' justifyContent='center' alignItems=\"start\" marginBottom={2}>\n        <Typography variant=\"h3\">\n          Calc-IDS\n        </Typography>\n\n        <Box>\n          <IconButton\n            title='Ajuda'\n            onClick={() => {\n              window.openAlertModal({\n                content: () => (\n                  <Box textAlign=\"justify\">\n                    <ul>\n                      {INSTRUCTIONS.map((instruction, index) =>\n                        <li key={index}>\n                          <Typography>{instruction}</Typography>\n                        </li>\n                      )}\n                    </ul>\n                  </Box>\n                ),\n                title: 'Ajuda'\n              })\n            }}>\n            <HelpIcon />\n          </IconButton>\n        </Box>\n      </Box>\n\n      <SamplesTable\n        title={\n          <Box width='100%'>\n            <Box display='flex' flexWrap='wrap' paddingY={2}>\n              <Typography variant=\"h5\" paragraph>\n                Amostras ({samples.length})\n              </Typography >\n\n              <Box marginLeft={2} marginBottom={2}>\n                <Button\n                  onClick={handleCalculation}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={samples.length === 0}\n                >\n                  Calcular IDS\n                </Button>\n              </Box>\n\n              <Box marginLeft={2} marginBottom={2}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => setModalOpen(true)}>\n                  Adicionar Amostras por Arquivo\n                </Button>\n              </Box>\n\n              <Box marginLeft={2} marginBottom={2}>\n                <Button onClick={generateRandomSamples} variant=\"outlined\" color=\"primary\">\n                  Gerar Amostras Aleatórias\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        }\n        samples={samples}\n        onSampleAdd={handleSampleAdd}\n        onSampleDelete={handleDeleteSample}\n        onSampleUpdate={handleSampleUpdate}\n      />\n\n      <span ref={calculationRef}>\n        <Calculate\n          calculationResult={calculationResult}\n        />\n      </span>\n\n      <BatchesUploadModal\n        open={modalIsOpen}\n        onClose={() => setModalOpen(false)}\n        onSubmit={handleBatchUploadSamples}\n      />\n    </>\n  )\n}\n\nexport default Samples;\n\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  palette: {\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)'\n    },\n    primary: {\n      dark: 'rgb(73,117,48)',\n      light: 'rgb(179,209,161)',\n      main: 'rgb(102,163,67)',\n    },\n    secondary: {\n      dark: 'rgb(68,109,44)',\n      light: 'rgb(102,163,67)',\n      main: 'rgb(79,127,52)'\n    },\n  }\n})\n","import React from 'react';\nimport { Box, Container, ThemeProvider } from '@material-ui/core';\nimport AlertModal from '../components/AlertModal';\nimport Samples from '../pages/Samples';\nimport 'fontsource-roboto';\nimport theme from '../theme/index';\n\nconst IndexPage = () =>\n  <ThemeProvider theme={theme}>\n    <Container component=\"main\" p={5}>\n      <AlertModal />\n      <Box mt={2} py={3} textAlign=\"center\">\n        <Samples />\n      </Box>\n    </Container>\n  </ThemeProvider>\n\nexport default IndexPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport IndexPage from './pages/index';\n\nReactDOM.render(\n  <IndexPage />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}